# Default values for restic.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

backup:

  # mode
  # standalone (default) - schedules backup and saves via restic to s3
  # dump-only - uses database dump function and save dump to (mounted) path /backup. ends with error-code from dump

  mode: standalone  # <---- do not change, this has to be default
  # mode: dump-only # use it only for overwriting in umbrella charts

  # how long take database dump in maximum
  dumpTimeout: "15m"

  # define an extra volume for database dumps
  # it is mounted on /backup/dbdump
  dumpVolume:
    enabled: true
    persistentVolumeClaim:
      storageClassName: local-path-fast
      storage: 10G

  imagePullSecrets:
    - name: registry-wolke8

  image:
    repository: "ghcr.io/realestatepilot/restic-backupclient"
    # tag: 0.8.2  # use app version by default
    pullPolicy: IfNotPresent

podAnnotations: {}

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources:
  limits:
    memory: 6Gi
  requests:
    cpu: 20m
    memory: 256Mi

# SHOULD be set in case of hostpath binding
# nodeSelector:
#   testnodelabel: "true"

tolerations: []

affinity: {}

# RESTIC Backup specific configuration

schedules:
  - "@daily"

# value mandatory until ticket is solved
# adapt to your own needs!
# https://github.com/evermind/docker-restic-backupclient/issues/10
resticPruneTimeout: "12h"

# cacheDir:
#   hostPath: "/data/restic-cache-dir"

# Required values:
#
# resticRepositoryUrl:
resticPassword: changeToSuperSecretPassword
# s3Key: ...
# s3Secret: ...

# s3 options are required
s3:
  bucketName: configBucketNameHere
  region: eu-central-1
  accessKey: yourAccessKey
  secretKey: yourSecretKey
  url: https://your.provider.tld


# Optional values:
#
# configmap: name-of-a-configmap
#            This map should contain a valid backup.yaml config. The "name-of-a-configmap" is parsed as HELM template, so placeholders are alowed
#
# configmap: false # (currently at some charts there is configmap already set. it has to been disabled for overwriting values in this manner)
# config:          # Configuration by overriding defaults inside deployment or env-files
#   keep:
#     last: 5
#     daily: 7
#     weekly: 4
#   elasticdump:
#     url: http://es-prod:9200
#     exclude:
#       - ^his_
#       - ^all_his
#
# volumes: List of optional volumes - all values are parsed as template.
#   - name: data # the name is used as mount point directory name at /backup/{{ name }}
#     hostPath: /path/to/backup
  # - name: pvc-data-volume
  #   persistentVolumeClaim:
  #     claimName: existingClaimName


# Optional Values

# restore: # writable Mount Point as restore destination
#   hostPath: /path/to/restore

# dump elasticsearch data  before backup
# data:
#   backup.yaml: |
#     elasticdump:
#       url: http://{{ include "elasticsearch.fullname" . }}:9200
#
# see also further informations at https://github.com/evermind/docker-restic-backupclient
