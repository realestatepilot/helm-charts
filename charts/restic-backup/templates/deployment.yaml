apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "restic.fullname" . }}
  labels:
    {{- include "restic.labels" . | nindent 4 }}
spec:
  replicas: 1

  selector:
    matchLabels:
      {{- include "restic.selectorLabels" . | nindent 6 }}
  strategy:
    # damit das PVC zunächst freigegeben werden kann, bevor der neue POD es benötigt 
    type: Recreate
  template:
    metadata:
      annotations:
        {{- include "restic.veleroAnnotations" .  | nindent 8 }}
        {{- toYaml .Values.podAnnotations | nindent 8 }}
      labels:
        {{- include "restic.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.backup.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "restic.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}-backup
          image: "{{ .Values.backup.image.repository }}:{{ .Values.backup.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backup.image.pullPolicy | default "IfNotPresent" }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          command: 
{{- if eq "standalone" .Values.backup.mode }}
            - /scripts/backup_client.py
            - schedule
{{ toYaml (required "schedules are required" .Values.schedules) | indent 12 }}
{{- else if eq "dump-only" .Values.backup.mode }}
            - sleep
            - infinity
{{- end }}
          env:
            - name: TZ
              value: Europe/Berlin
            - name: RESTIC_REPOSITORY
              value: {{ include "restic.repositoryUrl" . }}
            - name: RESTIC_PASSWORD
              value: {{ required "resticPassword is required" .Values.resticPassword }}
            # mandatory until https://github.com/evermind/docker-restic-backupclient/issues/10 is solved
            - name: RESTIC_PRUNE_TIMEOUT
              value: {{ required "resticPruneTimeout is required" .Values.resticPruneTimeout }}              
            - name: BACKUP_HOSTNAME
              value: {{ .Release.Name }}-backup
            - name: AWS_ACCESS_KEY_ID
              value: {{ required "s3.accessKey is required" .Values.s3.accessKey }}
            - name: AWS_SECRET_ACCESS_KEY
              value: {{ required "s3.secretKey is required" .Values.s3.secretKey }}
            - name: BACKUP_CONFIG
              value: /config/backup.yaml
          volumeMounts:
            - name: backup
              mountPath: /backup
            - name: backup-config
              mountPath: /config
            {{- if .Values.scripts }}            
            - name: customscripts
              mountPath: /customscripts
            {{- end }}
  {{- $root := . -}}
  {{- range $i,$k := .Values.volumes }}
            - name: backup-vol-{{ $i }}
              mountPath: /backup/{{ tpl $k.name $root }}
              readOnly: true
  {{- end }}
  {{- if .Values.restore }}
            - name: restore
              mountPath: /restore
  {{- end }}
  {{- if .Values.cacheDir }}
            - name: cachedir
              mountPath: /restic-cache
  {{ end }}
          securityContext:
              {{- toYaml .Values.securityContext | nindent 12 }}

      volumes:
        - name: backup
          {{- if .Values.backup.dumpVolume.enabled }}
          persistentVolumeClaim:
            claimName:  {{ include "restic.fullname" $ }}-dbdump
          {{- else }}
          emptyDir: {}
          {{- end }}
        - name: backup-config
          configMap:
{{- if .Values.configmap }}
            name: "{{ tpl .Values.configmap . }}"
{{- else }}
            name: {{ include "restic.name" . }}-config
{{- end }}
{{- if .Values.scripts }}
        - name: customscripts
          configMap:
            name: {{ include "restic.name" . }}-scripts
{{- end }}
{{- range $i,$k := .Values.volumes }}
        - name: backup-vol-{{ $i }}
          {{- if $k.hostPath }}
          hostPath:
            path: "{{ tpl $k.hostPath $root }}"
          {{- end}}
          {{- if  $k.persistentVolumeClaim }}
          persistentVolumeClaim:
            {{- if $k.persistentVolumeClaim.claimName }}
            claimName: {{$k.persistentVolumeClaim.claimName}}
            {{- else if $k.persistentVolumeClaim.storageClassName }}
            claimName: {{ include "restic.fullname" $ }}-{{$k.name}}
            {{- end }}

          {{- end }}
{{- end }}
{{- if .Values.restore }}
        - name: restore
          hostPath:
            path: {{ .Values.restore.hostPath }}
{{- end }}
{{- if .Values.cacheDir }}
        - name: cachedir
          hostPath:
            path: {{ .Values.cacheDir.hostPath }}
{{- end }}

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
